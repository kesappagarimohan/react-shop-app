{"version":3,"sources":["components/Column.tsx","components/Row.tsx","constants.ts","context.ts","services/UserService.ts","store/actions/CurrencyActions.ts","components/Currency.tsx","components/ThemeSwitch.tsx","components/Container.tsx","components/ErrorPage.tsx","components/TextBox.tsx","services/StorageService.ts","store/actions/UserActions.ts","components/LoadingWrapper.tsx","utils/formatter.ts","store/actions/LoadingActions.ts","containers/Login.tsx","components/ErrorBoundary.tsx","services/ProductService.ts","containers/ProductDetail.tsx","components/ImageWithFallback.tsx","components/ProductPrice.tsx","components/Product.tsx","store/actions/CartActions.ts","components/Paginate.tsx","containers/ProductList.tsx","Demo.tsx","components/PrivateRoute.tsx","AppRouter.tsx","components/Logo.tsx","components/Menu.tsx","components/SearchBox.tsx","services/MenuService.ts","containers/Header.tsx","components/LoginButtons.tsx","components/CartButton.tsx","App.tsx","reportWebVitals.ts","store/reducers/CartReducer.ts","store/reducers/CurrencyReducer.ts","store/reducers/UserReducer.ts","store/reducers/index.ts","store/reducers/LoadingReducer.ts","store/index.ts","index.tsx"],"names":["Column","classes","size","children","color","useContext","ThemeContext","cls","className","Row","props","BASE_URL","React","createContext","login","email","password","url","constants","axios","post","catch","e","Promise","reject","response","data","profile","get","headers","Authorization","sessionStorage","getItem","ActionTypes","UPDATE_CURRENCY","code","type","Currency","bgcolor","this","theme","onChange","currencyChange","target","value","map","c","Component","connect","dispatch","CurrencyActions","ThemeSwitch","useState","setTheme","useEffect","console","log","document","body","onClick","thm","themeChange","Container","fluid","ErrorPage","to","TextBox","label","textChange","placeholder","setValue","touched","setTouched","onBlur","trim","domain","key","resolve","setItem","JSON","stringify","clear","SIGN_IN_SUCCESS","SIGN_IN_ERROR","SIGN_OUT","UserActions","loginError","error","loginSuccess","user","logout","LoadingWrapper","loading","useSelector","store","style","width","height","visibility","role","str","toLowerCase","split","word","replace","toUpperCase","join","Number","parseInt","toFixed","current","last","decimal","Math","abs","SHOW_LOADER","HIDE_LOADER","Login","state","a","preventDefault","showLoader","UserService","StorageService","access_token","signinSuccess","hideLoader","signinError","formatter","message","toString","isAuthenticated","lastPage","location","from","errorMessage","onSubmit","setState","storeData","userSession","err","LoadingActions","ErrorBoundary","hasError","errorInfo","page","id","ProductDetail","params","match","ProductService","ImageWithFallback","source","imgSrc","setDefault","src","onError","ProductPrice","price","salePrice","Product","stock","disabled","btnClick","pdata","currencyCode","wishlist","productId","productImage","productName","productPrice","productSalePrice","renderStock","productStock","ADD_TO_CART","REMOVE_ITEM","product","Paginate","totalPages","changePage","currentPage","selected","setSelected","pages","Array","fill","aria-label","p","i","ProductList","plist","pageNumber","updateData","getData","addItem","history","push","val","addToCart","selectedCurrency","currency","CartActions","Demo","no","count","nextProps","nextState","prevState","PrivateRoute","component","rest","RoutedComponent","render","pathname","LazyProfile","lazy","AppRouter","Suspense","fallback","path","exact","Logo","fontSize","Menu","menuData","item","menuLink","activeClassName","menuItem","SearchBox","Header","menuItems","MenuService","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","LoginButtons","auth","useDispatch","useHistory","CartButton","cartItems","cart","length","data-count","App","currentCurrency","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cartReducer","action","productQty","filter","prod","currencyReducer","initialState","userReducer","rootReducer","combineReducers","appStore","createStore","composeWithDevTools","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00bea5e1.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../context\";\n\ntype Props = {\n  size: number;\n  classes?: string;\n};\n\nconst Column: React.FC<Props> = ({ classes, size, children }) => {\n  const theme = useContext(ThemeContext);\n  const color = theme === \"dark\" ? \"text-light\" : \"text-dark\";\n  const cls = `col-md-${size}`;\n  return <div className={`${cls} ${color} ${classes}`}>{children}</div>;\n};\nexport default Column;\n","import React from \"react\";\n\nconst Row: React.FC = (props) => {\n  return <div className=\"row\">{props.children}</div>;\n};\nexport default Row;\n","export default {\n  BASE_URL: `http://localhost:5000`,\n};\n","import React from \"react\";\n\nexport const ThemeContext = React.createContext<string>(\"light\");\n","import axios from \"axios\";\nimport constants from \"../constants\";\nimport { LoginResponseType } from \"../types\";\n\nconst login = (email: string, password: string) => {\n  const url = `${constants.BASE_URL}/auth/login`;\n  return axios\n    .post<LoginResponseType>(url, { email, password })\n    .catch((e) => Promise.reject(e.response.data));\n};\n\nconst profile = () => {\n  const url = `${constants.BASE_URL}/auth/profile`;\n  return axios.get(url, {\n    headers: { Authorization: `Bearer ${sessionStorage.getItem(\"token\")}` },\n  });\n};\n\nexport default { login, profile };\n","const ActionTypes = {\n  UPDATE_CURRENCY: \"[Currency] Update Currency\",\n};\n\nconst updateCurrency = (code: string) => {\n  return {\n    type: ActionTypes.UPDATE_CURRENCY, // required, unique\n    code, // payload (optional)\n  };\n};\n\nexport default { updateCurrency, ActionTypes };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport CurrencyActions from \"../store/actions/CurrencyActions\";\n\ntype CurrencyProps = {\n  currencyChange: (code: string) => void;\n  theme?: \"light\" | \"dark\";\n};\n\nclass Currency extends React.Component<CurrencyProps> {\n  render() {\n    const codes = [\"INR\", \"USD\", \"CAD\", \"GBP\", \"EUR\"];\n    const bgcolor = this.props.theme === \"dark\" ? \"text-light\" : \"text-dark\";\n    return (\n      <select\n        onChange={(e) => this.props.currencyChange(e.target.value)}\n        className={`form-control-sm ${bgcolor} bg-${this.props.theme}`}\n      >\n        {codes.map((c) => (\n          <option key={c}>{c}</option>\n        ))}\n      </select>\n    );\n  }\n}\n// connect(what data to fetch from the store, what data to update inside the store)(component)\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    currencyChange: (code: string) =>\n      dispatch(CurrencyActions.updateCurrency(code)),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Currency);\n","import React, { useEffect, useState } from \"react\";\n\ntype Props = {\n  themeChange: (theme: \"light\" | \"dark\") => void;\n};\n// pure component by default\nconst ThemeSwitch: React.FC<Props> = (props) => {\n  // state, setState : useState\n  // let [state_variable,setState]=useState(initial_value); // single state\n  let [theme, setTheme] = useState(\"light\");\n  // mounting, updating, unmounting\n  // useEffect(effect_function, dependencies that will trigger the effect_function)\n  useEffect(() => {\n    console.log(\"USE EFFECT CALLED\");\n    document.body.className = \"bg-\" + theme; // side effect\n  }, [theme]);\n\n  const updateTheme = () => {\n    let thm: \"light\" | \"dark\" = theme === \"dark\" ? \"light\" : \"dark\";\n    setTheme(thm);\n    props.themeChange(thm);\n  };\n\n  return (\n    <button onClick={updateTheme} className=\"btn theme-buttons\">\n      {theme === \"dark\" ? (\n        <i className=\"text-warning fas fa-sun\"></i>\n      ) : (\n        <i className=\"text-secondary fas fa-moon\"></i>\n      )}\n    </button>\n  );\n};\nexport default ThemeSwitch;\n","import React from \"react\";\n\nconst Container: React.FC<{ fluid?: boolean }> = ({ children, fluid }) => {\n  const cls = fluid ? \"container-fluid\" : \"container\";\n  return <div className={cls}>{children}</div>;\n};\nexport default Container;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Column from \"./Column\";\nimport Container from \"./Container\";\n\nfunction ErrorPage() {\n  return (\n    <div className=\"error-page-wrap d-flex flex-row align-items-center\">\n      <Container>\n        <div className=\"row justify-content-center\">\n          <Column size={12} classes=\"text-center\">\n            <i className=\"fa-5x text-danger fas fa-exclamation-triangle mb-4\"></i>\n            <span className=\"display-1 d-block\">\n              4<i className=\"fas fa-sad-tear text-warning\"></i>4\n            </span>\n            <div className=\"mb-2 lead text-muted\">\n              Oops! The page you are looking for was not found.\n            </div>\n            <Link to=\"/\" className=\"btn btn-outline-primary my-4\">\n              Back to <i className=\"fas fa-home fa-2x\"></i>\n            </Link>\n          </Column>\n        </div>\n      </Container>\n    </div>\n  );\n}\nexport default ErrorPage;\n","import React, { useEffect, useState } from \"react\";\n\ntype Props = {\n  label?: string;\n  type: \"text\" | \"password\" | \"email\";\n  textChange: (value: string) => void;\n  placeholder?: string;\n};\nconst TextBox: React.FC<Props> = ({ label, type, textChange, placeholder }) => {\n  const [value, setValue] = useState(\"\");\n  const [touched, setTouched] = useState(false);\n\n  useEffect(() => {\n    textChange(value);\n  }, [value]);\n\n  return (\n    <div className=\"form-group my-4\">\n      {label ? <label>{label}</label> : null}\n      <input\n        type={type}\n        className=\"form-control\"\n        value={value}\n        placeholder={placeholder}\n        onBlur={() => setTouched(true)}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      {touched && value.trim() === \"\" ? (\n        <small className=\"text-danger\">This field is required</small>\n      ) : null}\n    </div>\n  );\n};\nexport default TextBox;\n","const domain = \"@shopapp\";\nconst storeData = (key: string, value: string) => {\n  return new Promise((resolve, reject) => {\n    try {\n      sessionStorage.setItem(`${domain}:${key}`, JSON.stringify(value));\n      resolve(\"stored\");\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nconst getData = (key: string) => {\n  return new Promise((resolve, reject) => {\n    try {\n      const value = sessionStorage.getItem(`${domain}:${key}`);\n      if (!value) throw \"no data\";\n      resolve(JSON.parse(value));\n    } catch (e) {\n      reject(e);\n    }\n\n  });\n};\n\nconst clearAll =()=>sessionStorage.clear()\nexport default { storeData, getData ,clearAll};\n","const ActionTypes = {\n  SIGN_IN_SUCCESS: \"[User] Login success\",\n  SIGN_IN_ERROR: \"[User] Login error\",\n  SIGN_OUT: \"[User] Logout\",\n};\n\nconst loginSuccess = (user: object) => {\n  return {\n    type: ActionTypes.SIGN_IN_SUCCESS,\n    user,\n  };\n};\nconst loginError = (error: string) => {\n  return {\n    type: ActionTypes.SIGN_IN_ERROR,\n    error,\n  };\n};\nconst logout = () => {\n  return { type: ActionTypes.SIGN_OUT };\n};\n\nconst UserActions = { loginError, loginSuccess, logout, ActionTypes };\nexport default UserActions;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { StoreType } from \"../types\";\r\nconst LoadingWrapper: React.FC<{}> = ({ children }) => {\r\n  const loading = useSelector<StoreType>((store) => store.loading);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"spinner-border\"\r\n        style={{\r\n          width: \"3rem\",\r\n          height: \"3rem\",\r\n          visibility: loading ? \"visible\" : \"hidden\",\r\n        }}\r\n        role=\"status\"\r\n      >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\nexport default LoadingWrapper;\r\n","export default {\n  titlecase: (str: string) =>\n    str\n      .toLowerCase()\n      .split(\" \")\n      .map(function (word) {\n        return word.replace(word[0], word[0].toUpperCase());\n      })\n      .join(\" \"),\n  price: (value: string, code = \"INR\") =>\n    `${code} ${Number.parseInt(value).toFixed(2)}`,\n  discount: (current: string, last: string, decimal = 1) =>\n    Math.abs(((Number(current) - Number(last)) / Number(last)) * 100).toFixed(\n      decimal\n    ) + \"%\",\n};\n","const ActionTypes = {\r\n  SHOW_LOADER: \"[Loading] Show\",\r\n  HIDE_LOADER: \"[Loading] Hide\",\r\n};\r\nconst showLoader = () => {\r\n  return { type: ActionTypes.SHOW_LOADER };\r\n};\r\nconst hideLoader = () => {\r\n  return { type: ActionTypes.HIDE_LOADER };\r\n};\r\nexport default {\r\n  showLoader,\r\n  hideLoader,\r\n  ActionTypes,\r\n};\r\n","import React, { SyntheticEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { Dispatch } from \"redux\";\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport TextBox from \"../components/TextBox\";\nimport StorageService from \"../services/StorageService\";\nimport UserService from \"../services/UserService\";\nimport UserActions from \"../store/actions/UserActions\";\nimport { StoreType } from \"../types\";\nimport LoadingWrapper from \"../components/LoadingWrapper\";\nimport formatter from \"../utils/formatter\";\nimport LoadingActions from \"../store/actions/LoadingActions\";\ntype LoginProps = {\n  signinSuccess: (user: object) => void;\n  signinError: (error: string) => void;\n  isAuthenticated: boolean;\n  errorMessage: string | null;\n  showLoader: () => void;\n  hideLoader: () => void;\n} & RouteComponentProps;\ntype LoginState = { email: string; password: string };\nclass Login extends React.Component<LoginProps, LoginState> {\n  state: LoginState = { email: \"\", password: \"\" };\n  login = async (e: SyntheticEvent) => {\n    try {\n      e.preventDefault();\n      const { email, password } = this.state;\n      this.props.showLoader();\n      const { data } = await UserService.login(email, password);\n      await StorageService.storeData(\"token\", data.access_token);\n      this.props.signinSuccess(data); // create/store session\n      this.props.hideLoader();\n    } catch (e) {\n      this.props.signinError(formatter.titlecase(e.message.toString()));\n      this.props.hideLoader();\n    }\n  };\n  render() {\n    if (this.props.isAuthenticated) {\n      let lastPage = \"/\"; // by default home page\n      const state: any = this.props.location.state;\n      if (state && state.from) {\n        lastPage = state.from;\n      }\n      return <Redirect to={lastPage} />;\n    }\n    return (\n      <LoadingWrapper>\n        <Row>\n          <Column\n            size={4}\n            classes={\n              \"offset-md-4 shadow-sm border p-4 text-center rounded mt-5\"\n            }\n          >\n            <h2>Login</h2>\n            <hr />\n            <small className=\"text-danger\">{this.props.errorMessage}</small>\n            <form onSubmit={this.login}>\n              <TextBox\n                placeholder={\"Email\"}\n                type={\"email\"}\n                textChange={(email) => this.setState({ email })}\n              />\n              <TextBox\n                placeholder={\"Password\"}\n                type={\"password\"}\n                textChange={(password) => this.setState({ password })}\n              />\n              <button className={\"btn btn-success w-100 text-uppercase\"}>\n                Login\n              </button>\n            </form>\n          </Column>\n        </Row>\n      </LoadingWrapper>\n    );\n  }\n}\nconst mapStoreDataToProps = (storeData: StoreType) => {\n  return {\n    isAuthenticated: !!storeData.userSession.user,\n    errorMessage: storeData.userSession.error,\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    signinSuccess: (user: object) => dispatch(UserActions.loginSuccess(user)),\n    signinError: (err: string) => dispatch(UserActions.loginError(err)),\n    hideLoader: () => dispatch(LoadingActions.hideLoader()),\n    showLoader: () => dispatch(LoadingActions.showLoader()),\n  };\n};\nexport default connect(mapStoreDataToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\r\nclass ErrorBoundary extends React.Component {\r\n  state = { hasError: false };\r\n  static getDerivedStateFromError(error: any) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n  componentDidCatch(error: any, errorInfo: any) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, errorInfo);\r\n  }\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\nexport default ErrorBoundary;\r\n","import axios from \"axios\";\nimport constants from \"../constants\";\nimport { ProductResponseType, ProductType } from \"../types\";\n\nconst getProducts = (page = 1) => {\n  const url = `${constants.BASE_URL}/product?page=${page}`;\n  return axios.get<ProductResponseType>(url);\n};\n\nconst getProductById = (id: string) => {\n  const url = `${constants.BASE_URL}/product/${id}`;\n  return axios.get<ProductType>(url);\n};\n\nexport default { getProducts, getProductById };\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport Column from \"../components/Column\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport Row from \"../components/Row\";\nimport ProductService from \"../services/ProductService\";\n\nclass ProductDetail extends React.Component<RouteComponentProps> {\n  async componentDidMount() {\n    try {\n      const params: any = this.props.match.params;\n      const { data } = await ProductService.getProductById(params.id);\n      console.log(\"success\", data);\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  }\n  render() {\n    return (\n      <ErrorBoundary>\n        <Row>\n          <Column size={12}>\n            <h1>Product Detail</h1>\n          </Column>\n        </Row>\n      </ErrorBoundary>\n    );\n  }\n}\nexport default ProductDetail;\n","import React, { useState } from \"react\";\n\ntype Props = { source: string };\n\nconst ImageWithFallback: React.FC<Props> = ({ source }) => {\n  let [imgSrc, setDefault] = useState(source);\n  return (\n    <img\n      src={imgSrc}\n      onError={() =>\n        setDefault(\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\"\n        )\n      }\n      className=\"img-thumbnail\"\n    />\n  );\n};\nexport default ImageWithFallback;\n","import React from \"react\";\nimport formatter from \"../utils/formatter\";\n\ntype Props = {\n  price: string;\n  salePrice: string;\n  code?: string;\n};\n\nconst ProductPrice: React.FC<Props> = ({ price, salePrice, code }) => {\n  return (\n    <div className=\"d-flex align-items-center justify-content-center my-2\">\n      <span>{formatter.price(salePrice, code)}</span>\n      {salePrice !== price ? (\n        <>\n          <small className=\"text-muted mx-2\">\n            <del>{formatter.price(price, code)}</del>\n          </small>\n          <small className=\"badge rounded-pill bg-success\">\n            {formatter.discount(salePrice, price)}\n          </small>\n        </>\n      ) : (\n        <small className=\"badge rounded-pill bg-warning mx-2\">\n          <i className=\"fas fa-award\"></i> New\n        </small>\n      )}\n    </div>\n  );\n};\nexport default ProductPrice;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ProductType } from \"../types\";\nimport formatter from \"../utils/formatter\";\nimport ImageWithFallback from \"./ImageWithFallback\";\nimport ProductPrice from \"./ProductPrice\";\n\ntype ProductProps = {\n  pdata: ProductType;\n  wishlist?: boolean;\n  currencyCode: string;\n  btnClick: () => void;\n};\nclass Product extends React.Component<ProductProps> {\n  renderStock(stock: number) {\n    if (stock <= 0) {\n      return (\n        <button disabled className=\"btn btn-sm w-100 btn-danger text-uppercase\">\n          <i className=\"far fa-frown\"></i>Out of stock\n        </button>\n      );\n    }\n    return (\n      <button\n        onClick={() => this.props.btnClick()}\n        className=\"btn btn-sm w-100 btn-primary text-uppercase\"\n      >\n        <i className=\"fab fa-opencart\"></i> Add to Cart\n      </button>\n    );\n  }\n  render() {\n    const { pdata, wishlist, currencyCode } = this.props;\n    return (\n      <div className=\"p-4 shadow-sm text-center\">\n        <Link to={`/productdetail/${pdata.productId}`}>\n          <ImageWithFallback source={pdata.productImage} />\n        </Link>\n        <h5 className={\"mt-4\"}>{formatter.titlecase(pdata.productName)}</h5>\n        <ProductPrice\n          price={pdata.productPrice}\n          salePrice={pdata.productSalePrice}\n          code={currencyCode}\n        />\n        {/* <button>Add to {wishlist ? \"Wishlist\" : \"Cart\"}</button> */}\n        {this.renderStock(pdata.productStock)}\n      </div>\n    );\n  }\n}\nexport default Product;\n","import { ProductType } from \"../../types\";\n\nconst ActionTypes = {\n  ADD_TO_CART: \"[Cart] Add to cart\",\n  REMOVE_ITEM: \"[Cart] Remove item\",\n};\n\nconst addToCart = (product: ProductType) => {\n  return {\n    type: ActionTypes.ADD_TO_CART,\n    product,\n  };\n};\nconst removeItem = (id: number) => {\n  return {\n    type: ActionTypes.REMOVE_ITEM,\n    id,\n  };\n};\nexport default { ActionTypes, addToCart, removeItem };\n","import React, { useState } from \"react\";\n\ntype Props = {\n  totalPages: number;\n  currentPage: number;\n  changePage: (pageno: number) => void;\n};\nconst Paginate: React.FC<Props> = ({ totalPages, currentPage, changePage }) => {\n  const [selected, setSelected] = useState(0);\n  const pages = Array(totalPages).fill(0);\n  return (\n    <div className=\"btn-group me-2\" role=\"group\" aria-label=\"First group\">\n      {pages.map((p, i) => (\n        <button\n          type=\"button\"\n          className={`btn btn-sm ${\n            selected === i ? \"btn-primary\" : \"btn-outline-primary\"\n          }`}\n          key={i}\n          onClick={() => {\n            changePage(i + 1);\n            setSelected(i);\n          }}\n        >\n          {i + 1}\n        </button>\n      ))}\n    </div>\n  );\n};\nexport default Paginate;\n","import React from \"react\";\nimport Column from \"../components/Column\";\nimport Product from \"../components/Product\";\nimport Row from \"../components/Row\";\nimport ProductService from \"../services/ProductService\";\nimport { ProductType, StoreType } from \"../types\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport CartActions from \"../store/actions/CartActions\";\nimport Paginate from \"../components/Paginate\";\n\ntype Props = {\n  selectedCurrency: string;\n  addItem: (product: ProductType) => void;\n} & RouteComponentProps;\ntype State = { plist: ProductType[]; totalPages: number; pageNumber: number };\nclass ProductList extends React.Component<Props, State> {\n  state: State = { plist: [], totalPages: 0, pageNumber: 1 };\n  componentDidMount() {\n    this.getData();\n  }\n  async getData() {\n    try {\n      const { data } = await ProductService.getProducts(this.state.pageNumber);\n      this.setState({\n        plist: data.data,\n        totalPages: data.totalPages,\n        pageNumber: data.currentPage,\n      });\n      // console.log(\"success\", data);\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  }\n  addToCart(product: ProductType) {\n    this.props.addItem(product); // add to cart logic\n    this.props.history.push(\"/cart\"); // redirect to cart page\n  }\n  updateData = (page: number) =>\n    this.setState({ pageNumber: page }, () => this.getData());\n  render() {\n    return (\n      <Row>\n        {this.state.plist.map((val) => (\n          <Column size={3} classes={\"my-3\"}>\n            <Product\n              btnClick={() => this.addToCart(val)}\n              pdata={val}\n              key={val.productId}\n              currencyCode={this.props.selectedCurrency}\n            />\n          </Column>\n        ))}\n        <Column size={12} classes={\"text-center\"}>\n          <Paginate\n            totalPages={this.state.totalPages}\n            currentPage={this.state.pageNumber}\n            changePage={this.updateData}\n          />\n        </Column>\n      </Row>\n    );\n  }\n}\n// connect(how to connect)(what to connect/component)\n// store data can be accessed thru the props of the component\nconst mapStoreToProps = (store: StoreType) => {\n  return {\n    selectedCurrency: store.currency, // undefined => INR => USD\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    addItem: (p: ProductType) => dispatch(CartActions.addToCart(p)),\n  };\n};\nexport default connect(mapStoreToProps, mapDispatchToProps)(ProductList);\n","import React from \"react\";\nimport Column from \"./components/Column\";\n\ntype State = { no: number; count: number };\nclass Demo extends React.Component<{}, State> {\n  state: State = { no: 0, count: 0 };\n  shouldComponentUpdate(nextProps: {}, nextState: State) {\n    console.log(\"SHOULD COMPONENT UPDATE\");\n    console.log(\"PROPS\", this.props, nextProps);\n    console.log(\"STATE\", this.state, nextState);\n    return this.state.no !== nextState.no || nextState.count === 7;\n  }\n  render() {\n    console.log(\"RENDER CALLED\", this.state);\n    const name = \"Mike\";\n    return (\n      <div className=\"row\">\n        <Column size={12}>\n          <h1>Demo Component</h1>\n          <p>Some html content</p>\n          {this.state.count > 6 ? <p>Hello from {name.toUpperCase()}</p> : null}\n          <p>{7 + 3}</p>\n          <button\n            onClick={() => this.setState({ no: 1 })}\n            className=\"btn btn-sm btn-primary mx-2\"\n          >\n            Change state to 1\n          </button>\n          <button\n            onClick={() => this.setState({ no: 0 })}\n            className=\"btn btn-sm btn-primary mx-2\"\n          >\n            Change state to 0\n          </button>\n          <button\n            className=\"btn btn-sm btn-primary mx-2\"\n            onClick={() =>\n              this.setState((prevState) => ({ count: prevState.count + 1 }))\n            }\n          >\n            Increment count\n          </button>\n        </Column>\n      </div>\n    );\n  }\n}\nexport default Demo;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\r\nimport { StoreType } from \"../types\";\r\nconst PrivateRoute: React.FC<RouteProps> = ({ component, ...rest }) => {\r\n  // extracting component prop & whatever is remaining is kept inside\r\n  const isAuthenticated=useSelector<StoreType>((store)=>!!store.userSession.user)\r\n  //let auth = true; // get the auth status\r\n  const RoutedComponent = component as React.FunctionComponent;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          <RoutedComponent />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: location.pathname },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default PrivateRoute;","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Container from \"./components/Container\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport Login from \"./containers/Login\";\nimport ProductDetail from \"./containers/ProductDetail\";\nimport ProductList from \"./containers/ProductList\";\n//import Profile from \"./containers/Profile\";\nimport Demo from \"./Demo\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nconst LazyProfile=React.lazy(()=>import(\"./containers/Profile\"))\n//const LazyProfile=React.l\nconst AppRouter: React.FC = (props) => {\n  return (\n    <main>\n      <Container fluid>\n        <React.Suspense fallback={<div>Loading...</div>}>\n\n        <Switch>\n          <Route path={\"/\"} component={Demo} exact />\n          <Route path={\"/products\"} component={ProductList} />\n          <Route path={\"/login\"} component={Login} />\n          <PrivateRoute path={\"/profile\"} component={LazyProfile} />\n          <Route path={\"/productdetail/:id\"} component={ProductDetail} />\n          {/* 404 Route */}\n          <Route component={ErrorPage} />\n        </Switch>\n        </React.Suspense>\n      </Container>\n    </main>\n  );\n};\nexport default AppRouter;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Logo() {\n  return (\n    <Link className=\"navbar-brand text-primary\" to=\"/\">\n      <i className=\"fas fa-dragon\" style={{ fontSize: \"1.2em\" }}></i> Store\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { MenuType } from \"../types\";\nimport { NavLink } from \"react-router-dom\";\n\ntype Props = {\n  menuData: MenuType[];\n};\n\nconst Menu: React.FC<Props> = ({ menuData }) => {\n  return (\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n      {menuData.map((item) => (\n        <li className=\"nav-item\" key={item.menuLink}>\n          <NavLink\n            className=\"nav-link\"\n            to={item.menuLink}\n            activeClassName=\"active\"\n            exact\n          >\n            {item.menuItem}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default Menu;\n","import React from \"react\";\ntype Props = {};\n\nconst SearchBox: React.FC<Props> = () => {\n  return (\n    <form className=\"d-flex\">\n      <input\n        className=\"form-control me-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n      />\n    </form>\n  );\n};\nexport default SearchBox;\n","import axios from \"axios\";\nimport { MenuType } from \"../types\";\n\nconst getMenuData = () => {\n  const url = \"/menu.json\";\n  return axios.get<MenuType[]>(url);\n};\n\nexport default { getMenuData };\n","import React from \"react\";\nimport Container from \"../components/Container\";\nimport Logo from \"../components/Logo\";\nimport Menu from \"../components/Menu\";\nimport SearchBox from \"../components/SearchBox\";\nimport MenuService from \"../services/MenuService\";\nimport { MenuType } from \"../types\";\n\ntype Props = {\n  theme: string;\n};\ntype State = {\n  menuItems: MenuType[];\n};\n\nclass Header extends React.Component<Props, State> {\n  state: State = { menuItems: [] };\n  async componentDidMount() {\n    try {\n      const { data } = await MenuService.getMenuData();\n      this.setState({ menuItems: data });\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  }\n  render() {\n    const { theme } = this.props;\n    return (\n      <nav\n        className={`fixed-top navbar navbar-expand-lg navbar-${theme} bg-${theme} shadow-sm`}\n      >\n        <Container fluid>\n          <Logo />\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <Menu menuData={this.state.menuItems} />\n            <SearchBox />\n            {this.props.children}\n          </div>\n        </Container>\n      </nav>\n    );\n  }\n}\nexport default Header;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport StorageService from \"../services/StorageService\";\nimport UserActions from \"../store/actions/UserActions\";\nimport { StoreType } from \"../types\";\n\nconst LoginButtons: React.FC = (props) => {\n  // const store = useStore<StoreType>();\n  const auth = useSelector((store: StoreType) => !!store.userSession.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  if (auth) {\n    return (\n      <>\n      <Link className=\"btn btn-link\" to={\"/profile\"}>\n        Profile\n      </Link>\n      <button\n        className=\"btn btn-sm btn-outline-primary mx-2\"\n        onClick={() => {\n          StorageService.clearAll()\n          dispatch(UserActions.logout());\n          history.push(\"/\"); // redirect\n        }} \n      >\n        Logout\n      </button>\n      </>\n    );\n  }\n  return (\n    <Link className=\"btn btn-sm btn-outline-primary mx-2\" to={\"/login\"}>\n      Login\n    </Link>\n  );\n};\nexport default LoginButtons;\n\n\n\n\n\n\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { StoreType } from \"../types\";\n\nconst CartButton = () => {\n  const cartItems = useSelector<StoreType>((store) => store.cart.length);\n  return (\n    <Link to={\"/cart\"}>\n      <span className=\"fa-stack has-badge\" data-count={cartItems}>\n        <i className=\"fa fa-circle fa-stack-2x\"></i>\n        <i className=\"fa fa-shopping-cart fa-stack-1x fa-inverse\"></i>\n      </span>\n    </Link>\n  );\n};\nexport default CartButton;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Demo from \"./Demo\";\nimport Product from \"./components/Product\";\nimport ProductList from \"./containers/ProductList\";\nimport Currency from \"./components/Currency\";\nimport Checkout from \"./containers/Checkout\";\nimport ThemeSwitch from \"./components/ThemeSwitch\";\nimport { ThemeContext } from \"./context\";\nimport AppRouter from \"./AppRouter\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"./containers/Header\";\nimport LoginButtons from \"./components/LoginButtons\";\nimport CartButton from \"./components/CartButton\";\ntype State = {\n  currentCurrency: string;\n  theme: \"light\" | \"dark\";\n};\nclass App extends React.Component<{}, State> {\n  state: State = { currentCurrency: \"INR\", theme: \"light\" };\n  render() {\n    const { theme } = this.state;\n    return (\n      <BrowserRouter>\n        <Header theme={theme}>\n          <CartButton />\n          <ThemeSwitch themeChange={(theme) => this.setState({ theme })} />\n          <Currency theme={theme} />\n          <LoginButtons />\n        </Header>\n        <ThemeContext.Provider value={theme}>\n          <AppRouter />\n          {/* <Demo />\n          <ProductList selectedCurrency={this.state.currentCurrency} /> */}\n        </ThemeContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CartType, ProductType } from \"../../types\";\nimport { Action } from \"redux\";\nimport CartActions from \"../actions/CartActions\";\ntype IAction = {\n  product: ProductType;\n  id: number;\n} & Action;\n// state : initialise, immutable\nfunction cartReducer(store: CartType[] = [], action: IAction) {\n  switch (action.type) {\n    case CartActions.ActionTypes.ADD_TO_CART:\n      return [...store, { ...action.product, productQty: 1 }];\n    case CartActions.ActionTypes.REMOVE_ITEM:\n      return store.filter((prod) => prod.productId !== action.id);\n    default:\n      return store;\n  }\n}\nexport default cartReducer;\n","import { Action } from \"redux\";\nimport CurrencyActions from \"../actions/CurrencyActions\";\n\n// reducer(store_data,action)\n// state : initialise\ntype IAction = {\n  code: string;\n} & Action;\nfunction currencyReducer(store = \"INR\", action: IAction) {\n  switch (action.type) {\n    case CurrencyActions.ActionTypes.UPDATE_CURRENCY:\n      return action.code;\n    default:\n      //return current_store_data;\n      return store;\n  }\n}\nexport default currencyReducer;\n","import { Action } from \"redux\";\nimport { UserSessionType } from \"../../types\";\nimport UserActions from \"../actions/UserActions\";\n\ninterface IAction extends Action {\n  user?: object;\n  error?: string;\n}\nconst initialState: UserSessionType = { user: null, error: null };\nfunction userReducer(\n  storeData: UserSessionType = initialState,\n  action: IAction\n): any {\n  switch (action.type) {\n    case UserActions.ActionTypes.SIGN_IN_SUCCESS:\n      return { error: null, user: action.user };\n    case UserActions.ActionTypes.SIGN_IN_ERROR:\n      return { user: null, error: action.error };\n    case UserActions.ActionTypes.SIGN_OUT:\n      return initialState;\n    default:\n      return storeData;\n  }\n}\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport { StoreType } from \"../../types\";\nimport cartReducer from \"./CartReducer\";\nimport currencyReducer from \"./CurrencyReducer\";\nimport loadingReducer from \"./LoadingReducer\";\nimport userReducer from \"./UserReducer\";\n\nconst rootReducer = combineReducers<StoreType>({\n  // data: reducer\n  currency: currencyReducer,\n  cart: cartReducer,\n  userSession: userReducer,\n  loading: loadingReducer,\n});\n\nexport default rootReducer;\n","import { Action } from \"redux\";\r\nimport LoadingActions from \"../actions/LoadingActions\";\r\nexport default function loadingReducer(store: boolean = false, action: Action) {\r\n  switch (action.type) {\r\n    case LoadingActions.ActionTypes.HIDE_LOADER:\r\n      return false;\r\n    case LoadingActions.ActionTypes.SHOW_LOADER:\r\n      return true;\r\n    default:\r\n      return store;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\n\nconst appStore = createStore(rootReducer, composeWithDevTools());\n\nexport default appStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport appStore from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}